<?php
/**
 * Copyright © 2016 Mozg. All rights reserved.
 * See LICENSE.txt for license details.
 */
?>

<?php
/*
dump(get_class($this));
dump(get_class_methods(get_class($this)));
*/
?>

<!-- PagSeguro_Transparente -->

<?php 

$enabled = false;

$isActiveCc = (bool)Mage::getStoreConfigFlag('payment/mozg_pagseguro_api_cc/active');
$isActiveBoleto = (bool)Mage::getStoreConfigFlag('payment/mozg_pagseguro_api_boleto/active');
$isActiveEletronictransfer = (bool)Mage::getStoreConfigFlag('payment/mozg_pagseguro_api_eletronictransfer/active');

if ($isActiveCc || $isActiveBoleto || $isActiveEletronictransfer){
    $enabled = true;
}

//dump($enabled);

?>

<?php if ($enabled): ?>


    <?php 

    $enabled = true;

    $pagseguro_session_id = Mage::helper('mozg_pagseguro')->getPagSeguroSessionId();

    //dump(strlen($pagseguro_session_id));

    if (strlen($pagseguro_session_id) > 100){
        $enabled = false;
        dump($pagseguro_session_id);
    }

    //dump($enabled);

    ?>

    <?php if ($enabled): ?>

        <?php
        $storeId = Mage::app()->getStore()->getStoreId();
        $grandTotal = Mage::helper('checkout/cart')->getQuote()->getGrandTotal();
        $grandTotal = (!$grandTotal)?'null':$grandTotal;
        ?>

        <?php if (Mage::helper('mozg_pagseguro')->getConfigDataDemoMode($storeId) == 'Y') : ?>
            <!--Para integração em ambiente de testes no Sandbox use este link-->
            <script type="text/javascript" src="https://stc.sandbox.pagseguro.uol.com.br/pagseguro/api/v2/checkout/pagseguro.directpayment.js"></script>
        <?php else : ?>
            <!--Para integração em ambiente de produção use este link-->
            <script type="text/javascript" src="https://stc.pagseguro.uol.com.br/pagseguro/api/v2/checkout/pagseguro.directpayment.js"></script>
        <?php endif; ?>

        <?php 

        $secure = Mage::getStoreConfigFlag('web/secure/use_in_frontend');

        $config = array(
            'base_url' => Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_LINK, $secure),
            'active_methods' => array(
                'cc' => '',
                'boleto' => '',
                'tef' => '',
            ),
            'amount' => $grandTotal,
            'flag' => '42x20',
            'debug' => true,
            'PagSeguroSessionId' => $pagseguro_session_id,
            'show_total' => true,
            'force_installments_selection' => true,
        );
        $json = json_encode($config);

        ?>

        <script type="text/javascript">

        /*

        - object literals

        */

        //

        var Mozg = Mozg || {};

        var debugData = [];

        Mozg.Pagseguro = {

            _version: '1.0.0',

            construct: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.construct');

                console.log(arguments);

                //

                //console.log(IWD);
                //console.log(typeof IWD);

                //

            },

            variableObject: {},

            initialize: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.initialize');

                console.log(arguments);

                //

                if (typeof IWD !== 'undefined') {
                    //IWD.OPC.Checkout.showLoader();
                } 

                //

                var variableObject = Mozg.Pagseguro.variableObject;

                variableObject.config = arguments[0];

                variableObject.errors = {
                    10000:"Bandeira de cartão de crédito inválida.",
                    10001:"Número de cartão de crédito com comprimento inválido.", 
                    10006:"Tamanho do CVV inválido.",
                    30400:"Dados do cartão inválidos.", 
                    30405:"Data de validade incorreta.",
                    59001:"ID da sessão web desconhecida",
                };

                //

                Mozg.Pagseguro.construct(variableObject.config);

                //

                debugData.push(variableObject.config);

                //

                setTimeout(function(){ 

                    console.log('# Checando biblioteca');
                    console.log(PagSeguroDirectPayment);
                    console.log(PagSeguroDirectPayment.ready);
                    if(!PagSeguroDirectPayment.ready){
                        alert('A biblioteca do PagSeguro não foi carregada, recarregue a página do browser.');
                    }

                }, 2000);

                //

                var methods = $$('#p_method_mozg_pagseguro_api_cc', '#p_method_mozg_pagseguro_api_dc', '#p_method_mozg_pagseguro_api_boleto', '#p_method_mozg_pagseguro_api_eletronictransfer');

                //console.log(methods);
                //console.log(methods.length);

                if(!methods.length){
                    console.log('PagSeguro: Não há métodos de pagamento habilitados em exibição. Execução abortada.');
                    return;
                }

                methods.forEach(function(item) {
                    //console.log(item);
                    //console.log(item.checked);
                });

                //

                jQuery(document).on('click', '.opc-btn-checkout', function () {
                    //Mozg.Pagseguro.construct();
                    //Mozg.Pagseguro.isValidForm();
                });

                //

                Mozg.Pagseguro.setSessionId();

                //

                Mozg.Pagseguro.getPaymentMethods();

                //

            },

            setSessionId: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.setSessionId');

                var variableObject = Mozg.Pagseguro.variableObject;

                var config = variableObject.config;

                var PagSeguroSessionId = config.PagSeguroSessionId;

                console.log(PagSeguroSessionId);
                //console.log(Mozg.Pagseguro);

                PagSeguroDirectPayment.setSessionId('<?php echo $pagseguro_session_id; ?>');

            },

            setMessage: function(type, message){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.setMessage');

                var html = '<ul class="messages"><li class="'+type+'-msg"><ul><li>' + message + '</li></ul></li></ul>';
                
                var messages = [
                    "mozg_pagseguro_message_cc", 
                    "mozg_pagseguro_message_boleto", 
                    "mozg_pagseguro_message_eletronictransfer"
                    ];

                messages.forEach(function(item) {
                    if($(item)){
                        $(item).update(html);
                    }            
                });

            },

            isValidFormField: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.isValidFormField');

                Mozg.Pagseguro.getSenderHash();

                var getCurrentMethod = Mozg.Pagseguro.getCurrentMethod();

                if(getCurrentMethod == 'mozg_pagseguro_api_cc'){
                    Mozg.Pagseguro.getDataCc();
                    Mozg.Pagseguro.getBrand();
                }


            },

            getCurrentMethod: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.getCurrentMethod');

                if (payment['currentMethod']) currentMethod = payment['currentMethod'];

                console.log(payment);
                console.log(currentMethod);

                return currentMethod;

            },

            isValidForm: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.isValidForm');

                if (typeof IWD !== 'undefined') {
                    //IWD.OPC.Checkout.showLoader();
                }

                var getCurrentMethod = Mozg.Pagseguro.getCurrentMethod();

                if(getCurrentMethod == 'mozg_pagseguro_api_cc'){
                    Mozg.Pagseguro.createCardToken();
                }else{
                    Mozg.Pagseguro.setMessage('success', 'Armazenando retorno da PagSeguro');
                    Mozg.Pagseguro.updatePaymentHashes();
                }

                setTimeout(function(){ 

                    console.log('# - # - # - # - ');
                    console.log(Mozg.Pagseguro);
                    console.log(debugData);

                }, 2000);

            },

            getSenderHash: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.getSenderHash');

                console.log(PagSeguroDirectPayment);

                var response = PagSeguroDirectPayment.getSenderHash();

                console.log(response);

                var variableObject = Mozg.Pagseguro.variableObject;

                variableObject.getSenderHash = response;
            },

            getDataCc: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.getDataCc');

                //

                console.log(arguments);

                /*args = [].slice.apply(arguments); // ArgumentsToArray

                console.log(args);
                console.log(args[0]);

                args.forEach(function(value) {
                    console.log('value ===', value);
                });*/

                //

                var cardNumber = document.getElementById( 'mozg_pagseguro_api_cc_cc_number' ).value;
                var expirationMonth = document.getElementById( 'mozg_pagseguro_api_cc_expiration' ).value;
                var expirationYear = document.getElementById( 'mozg_pagseguro_api_cc_expiration_yr' ).value;
                var cvv = document.getElementById( 'mozg_pagseguro_api_cc_cc_cid' ).value;

                var cardNumber = cardNumber.replace(/ /g, "");
                var cardBin = cardNumber.substring(0, 6);

                //

                var variableObject = Mozg.Pagseguro.variableObject;

                variableObject.cardNumber = cardNumber;
                variableObject.expirationMonth = expirationMonth;
                variableObject.expirationYear = expirationYear;
                variableObject.cvv = cvv;
                variableObject.cardBin = cardBin;

                //

            },

            getPaymentMethods: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.getPaymentMethods');

                var variableObject = Mozg.Pagseguro.variableObject;

                var config = variableObject.config;

                var amount = config.amount;

                var param = {
                    amount: amount,
                    success: function(response) {
                        //meios de pagamento disponíveis
                        console.log('Mozg.Pagseguro.getPaymentMethods.success');
                        console.log(response);
                        //console.log(response.paymentMethods);

                        variableObject.getPaymentMethods = response;

                        debugData.push(response);

                        if (response.error == true) {
                            alert('Não foi possível obter os meios de pagamento que estão funcionando no momento.');
                        }

                        //

                        /*var i = 0;
                        for(pagamento in response.paymentMethods){
                            var paymentMethods = Object.keys(response.paymentMethods).map(function(k) { 
                            return response.paymentMethods[k] 
                            });

                            console.log(paymentMethods[i].name);
                            i++;
                        }*/

                        //

                        Mozg.Pagseguro.showBrands();

                    //

                    },
                    error: function(response) {
                        //tratamento do erro
                        console.log('Mozg.Pagseguro.getPaymentMethods.error');
                        console.log(response);        

                        var errors = response.errors;

                        //console.log(errors);

                        var keys = Object.keys(errors);
                        var values = Object.values(errors);

                        //console.log(keys);
                        //console.log(values);

                        var key = keys[0];
                        var value = values[0];

                        var variableObject = Mozg.Pagseguro.variableObject;

                        var errors = variableObject.errors;

                        var _error = errors[key];

                        var message = value;

                        if (typeof _error !== 'undefined') {
                            var message = _error;
                        }

                        //

                        Mozg.Pagseguro.setMessage('error', message);

                    },
                    complete: function(response) {
                        //tratamento comum para todas chamadas
                        console.log('Mozg.Pagseguro.getPaymentMethods.complete');
                        console.log(response);

                        if (typeof IWD !== 'undefined') {
                            //IWD.OPC.Checkout.hideLoader();
                        }

                    }
                };

                console.log(param);

                PagSeguroDirectPayment.getPaymentMethods(param);

            },

            showBrands: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.showBrands');

                var variableObject = Mozg.Pagseguro.variableObject;

                var getPaymentMethods = variableObject.getPaymentMethods;

                try {

                    //

                    if($('mozg_pagseguro_message_cc')){
                        
                        credit_card_name = [];

                        console.log('CREDIT_CARD');

                        for (y in getPaymentMethods.paymentMethods.CREDIT_CARD.options) {
                            var optName = getPaymentMethods.paymentMethods.CREDIT_CARD.options[y].name.toString();
                            var optDisplayName = getPaymentMethods.paymentMethods.CREDIT_CARD.options[y].displayName.toString();
                            var optImage = getPaymentMethods.paymentMethods.CREDIT_CARD.options[y].images.SMALL.path.toString();
                            var optStatus = getPaymentMethods.paymentMethods.CREDIT_CARD.options[y].status;

                            console.log(optName + ' - ' + optStatus);

                            if (optStatus != 'UNAVAILABLE') {

                                credit_card_name.push(optName);

                                //console.log(optName);
                                //console.log(optDisplayName);
                                //console.log(optImage);

                                var imgElement = new Image(42, 20);
                                imgElement.id = 'mozg_pagseguro_cc_' + optName;
                                imgElement.src = 'https://stc.pagseguro.uol.com.br/' + optImage;
                                imgElement.addEventListener('load', function imgOnLoad() {
                                    //console.log('imgElement load');
                                    //console.log(arguments);
                                    //console.log(this);
                                });
                                imgElement.addEventListener('error', function imgOnError() {
                                    console.log('imgElement error');
                                    console.log(arguments);
                                    console.log(this);
                                })

                                var html = imgElement;

                                $('mozg_pagseguro_cards_avaliable').append(html);

                            }
                        }
                    }

                    //

                } catch (err) {
                    console.log(err.message);
                }

                //

                try {

                    //

                    if($('mozg_pagseguro_message_boleto')){

                        //$('mozg_pagseguro_api_boleto_boleto_type').options.length = 0;

                        console.log('BOLETO');

                        var optElm = new Element('option', {value: ''}).update('');
                        $('mozg_pagseguro_api_boleto_boleto_type').insert(optElm);

                        for (y in getPaymentMethods.paymentMethods.BOLETO.options) {
                            var optName = getPaymentMethods.paymentMethods.BOLETO.options[y].name.toString();
                            var optDisplayName = getPaymentMethods.paymentMethods.BOLETO.options[y].displayName.toString();
                            var optStatus = getPaymentMethods.paymentMethods.BOLETO.options[y].status;

                            console.log(optName + ' - ' + optStatus);

                            if (optStatus != 'UNAVAILABLE') {

                                var optElm = new Element('option', {value: optName}).update(optDisplayName);

                                $('mozg_pagseguro_api_boleto_boleto_type').insert(optElm);
                            }
                        }
                    }

                    //

                } catch (err) {
                    console.log(err.message);
                }

                //

                try {

                    //

                    if($('mozg_pagseguro_message_eletronictransfer')){

                        //$('mozg_pagseguro_api_eletronictransfer_eletronictransfer_type').options.length = 0;

                        console.log('ONLINE_DEBIT');

                        var optElm = new Element('option', {value: ''}).update('');
                        $('mozg_pagseguro_api_eletronictransfer_eletronictransfer_type').insert(optElm);

                        for (y in getPaymentMethods.paymentMethods.ONLINE_DEBIT.options) {
                            var optName = getPaymentMethods.paymentMethods.ONLINE_DEBIT.options[y].name.toString();
                            var optDisplayName = getPaymentMethods.paymentMethods.ONLINE_DEBIT.options[y].displayName.toString();
                            var optStatus = getPaymentMethods.paymentMethods.ONLINE_DEBIT.options[y].status;

                            console.log(optName + ' - ' + optStatus);

                            if (optStatus != 'UNAVAILABLE') {

                                var optElm = new Element('option', {value: optName}).update(optDisplayName);

                                $('mozg_pagseguro_api_eletronictransfer_eletronictransfer_type').insert(optElm);
                            }
                        }
                    }

                    //

                } catch (err) {
                    console.log(err.message);
                }

                //

            },

            getBrand: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.getBrand');

                var variableObject = Mozg.Pagseguro.variableObject;

                console.log(variableObject);

                var config = variableObject.config;

                var cardBin = variableObject.cardBin;

                var param = {
                    cardBin: cardBin,
                    success: function(response) {
                        //bandeira encontrada
                        console.log('Mozg.Pagseguro.getBrand.success');
                        console.log(response);

                        debugData.push(response);

                        variableObject.getBrand = response;

                        var brandName = response.brand.name;
                        var flag = config.flag;

                        //$('mozg_pagseguro_card_brand').innerHTML = '<img src="https://stc.pagseguro.uol.com.br/public/img/payment-methods-flags/' +flag + '/' + brandName + '.png" alt="' + brandName + '" title="' + brandName + '"/>';

                        //

                        Mozg.Pagseguro.cardSetCardBrand(brandName);

                        Mozg.Pagseguro.getInstallments(brandName);

                        //

                    },
                    error: function(response) {
                        //tratamento do erro
                        console.log('Mozg.Pagseguro.getBrand.error');
                        console.log(response);

                        Mozg.Pagseguro.setMessage('error', 'Houve um erro em: Pagseguro.getBrand');
                    },
                    complete: function(response) {
                        //tratamento comum para todas chamadas
                        console.log('Mozg.Pagseguro.getBrand.complete');
                        console.log(response);
                    }
                };

                console.log(param);

                PagSeguroDirectPayment.getBrand(param);

            },

            cardSetCardBrand: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.cardSetCardBrand');

                var brandName = arguments[0];

                console.log(credit_card_name);
                console.log(brandName);

                for(var i = 0; i < credit_card_name.length; ++i) {
                    var item =  credit_card_name[i];
                    var imageId = 'mozg_pagseguro_cc_' + item;
                    var brandName = brandName.toUpperCase();
                    //console.log(item + ' - ' + brandName);
                    if(item == brandName) {
                        $(imageId).removeClassName('grey');
                    } else {
                        $(imageId).addClassName('grey');
                    }
                    document.getElementById(imageId).style.display="inline";
                }


            },

            getInstallments: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.getInstallments');
                console.log(arguments);
                console.log(typeof arguments);
                var args = [].slice.apply(arguments); // ArgumentsToArray
                console.log(args);

                var brandName = arguments[0];

                var variableObject = Mozg.Pagseguro.variableObject;

                var config = variableObject.config;

                var amount = config.amount;

                var param = {
                    amount: amount,
                    brand: brandName,
                    //maxInstallmentNoInterest: 2,
                    success: function(response) {
                        //opções de parcelamento disponível
                        console.log('Mozg.Pagseguro.getInstallments.success');
                        console.log(response);

                        debugData.push(response);

                        variableObject.getInstallments = response;

                        var parcelsDrop = $('mozg_pagseguro_api_cc_installments');
                        parcelsDrop.length = 0;

                        for(installment in response.installments) break;
                        console.log(response.installments);

                        var b = response.installments[brandName];
                        var selectedInstallment = 1;

                        if(config.force_installments_selection){
                            var option = document.createElement('option');
                            option.text = "Selecione a quantidade de parcelas";
                            option.value = "";
                            parcelsDrop.add(option);
                        }

                        for(var x=0; x < b.length; x++){
                            var option = document.createElement('option');
                            option.text = b[x].quantity + "x de R$" + b[x].installmentAmount.toFixed(2).toString().replace('.',',');
                            option.text += (b[x].interestFree)?" sem juros":" com juros";
                            if(config.show_total){
                                option.text += " (total R$" + (b[x].installmentAmount*b[x].quantity).toFixed(2).toString().replace('.', ',') + ")";
                            }
                            option.selected = (b[x].quantity == selectedInstallment);
                            option.value = b[x].quantity + "|" + b[x].installmentAmount;
                            parcelsDrop.add(option);
                        }

                        console.log(b[0].quantity);
                        console.log(b[0].installmentAmount);

                    },
                    error: function(response) {
                        //tratamento do erro
                        console.log('Mozg.Pagseguro.getInstallments.error');
                        console.log(response);

                        Mozg.Pagseguro.setMessage('error', 'Houve um erro em: Pagseguro.getInstallments');
                    },
                    complete: function(response) {
                        //tratamento comum para todas chamadas
                        console.log('Mozg.Pagseguro.getInstallments.complete');
                        console.log(response);
                    }
                };

                console.log(param);

                PagSeguroDirectPayment.getInstallments(param);

            },

            createCardToken: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.createCardToken');

                var variableObject = Mozg.Pagseguro.variableObject;

                var cardNumber = variableObject.cardNumber;
                var cvv = variableObject.cvv;
                var expirationMonth = variableObject.expirationMonth;
                var expirationYear = variableObject.expirationYear;

                var param = {
                    cardNumber: cardNumber,
                    cvv: cvv,
                    expirationMonth: expirationMonth,
                    expirationYear: expirationYear,
                    success: function(response) {
                        //token gerado, esse deve ser usado na chamada da API do Checkout Transparente
                        console.log('Mozg.Pagseguro.createCardToken.success');
                        console.log(response);

                        variableObject.createCardToken = response;
                        
                        debugData.push(response);

                        Mozg.Pagseguro.setMessage('success', 'Armazenando retorno da PagSeguro');

                        Mozg.Pagseguro.updatePaymentHashes();

                    },
                    error: function(response) {
                        //tratamento do erro
                        console.log('Mozg.Pagseguro.createCardToken.error');
                        console.log(response);

                        //

                        var errors = response.errors;

                        var keys = Object.keys(errors);
                        var values = Object.values(errors);

                        //console.log(keys);
                        //console.log(values);

                        var key = keys[0];
                        var value = values[0];

                        var variableObject = Mozg.Pagseguro.variableObject;

                        var errors = variableObject.errors;

                        var _error = errors[key];

                        var message = value;

                        if (typeof _error !== 'undefined') {
                            var message = _error;
                        }

                        //

                        Mozg.Pagseguro.setMessage('error', message);

                        $('mozg_pagseguro_api_cc_cc_cid').value = '';

                        console.error('Falha ao obter o token do cartao.');

                        //
                    },
                    complete: function(response) {
                        //tratamento comum para todas chamadas
                        console.log('Mozg.Pagseguro.createCardToken.complete');
                        console.log(response);

                        if (typeof IWD !== 'undefined') {
                            //IWD.OPC.Checkout.hideLoader();
                        } 

                    }
                }

                if (typeof brandName !== 'undefined') {
                    param.brand = brandName;
                }

                console.log(param);

                PagSeguroDirectPayment.createCardToken(param);
            },

            updatePaymentHashes: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.updatePaymentHashes');
                console.log(arguments);

                var getCurrentMethod = Mozg.Pagseguro.getCurrentMethod();

                var variableObject = Mozg.Pagseguro.variableObject;

                var config = variableObject.config;
                var sender_hash = variableObject.getSenderHash;

                if(getCurrentMethod == 'mozg_pagseguro_api_cc'){
                    var createCardToken = variableObject.createCardToken;
                    var token = createCardToken.card.token;
                    var getBrand = variableObject.getBrand;
                    var brandName = getBrand.brand.name;

                    Mozg.Pagseguro.setMessage('success', 'Token: ' + token);
                }

                var _sender_hash = sender_hash.substring(1, 10) + '...';
                
                Mozg.Pagseguro.setMessage('success', 'Hash: ' + _sender_hash);
                //$('card_token').value = token;

                var _url = config.base_url + 'mozg_pagseguro/process/updatePaymentHashes/';

                var _paymentHashes = {
                    "payment[sender_hash]": sender_hash
                };
                if(getCurrentMethod == 'mozg_pagseguro_api_cc'){
                    var _paymentHashes = {
                        "payment[sender_hash]": sender_hash,
                        "payment[credit_card_token]": token,
                        "payment[cc_type]": brandName
                    };
                }

                new Ajax.Request(_url, {
                    method: 'post',
                    parameters: _paymentHashes,
                    onSuccess: function(response){
                        console.log('Mozg.Pagseguro.updatePaymentHashes.onSuccess');
                        console.log(response);
                    },
                    onFailure: function(response){
                        console.log('Mozg.Pagseguro.updatePaymentHashes.Failure');
                        console.log(response);

                        var message = 'Pagseguro.updatePaymentHashes.onFailure';

                        Mozg.Pagseguro.setMessage('error', message);
                    }
                });
            },    

            eventFieldsCc: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.eventFieldsCc');
                console.log(arguments);

                /*console.log(arguments[0][0].target);
                console.log(arguments[0][0].type);
                console.log(arguments[0][0].target.id);*/

                //

                var messages = [
                    "mozg_pagseguro_message_cc", 
                    "mozg_pagseguro_message_boleto", 
                    "mozg_pagseguro_message_eletronictransfer"
                    ];

                messages.forEach(function(item) {
                    if($(item)){
                        $(item).innerHTML = '';
                    }            
                });

                //

                Mozg.Pagseguro.getDataCc();

                //

                console.log('Mozg.Pagseguro.eventFieldsCc.validateField');

                var items = $(['mozg_pagseguro_api_cc_cc_number']);

                console.log(items);

                // Check the valid input
                if (!items.map(Validation.validate).all()) {
                    return;
                }

                Mozg.Pagseguro.isValidFormField();

                //

                var objectForm = new VarienForm('co-payment-form', true);
                var elementForm = objectForm.form;
                var formId = elementForm.id;
                var validator = new Validation(formId);
                var failedElements = Form.getElements(elementForm).findAll(function(elm){
                    //console.log(arguments);
                    return $(elm).hasClassName('validation-failed')
                });

                /*console.log(objectForm);
                console.log(elementForm);
                console.log(formId);
                console.log(validator);*/
                console.log(failedElements);

                if (validator.validate()){
                    console.log('Validate true');
                    Mozg.Pagseguro.isValidForm();
                }else{
                    console.log('Validate false');
                }

            },

            eventFieldsBoleto: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.eventFieldsBoleto');
                console.log(arguments);

                /*console.log(arguments[0][0].target);
                console.log(arguments[0][0].type);
                console.log(arguments[0][0].target.id);*/

                //

                var messages = [
                    "mozg_pagseguro_message_cc", 
                    "mozg_pagseguro_message_boleto", 
                    "mozg_pagseguro_message_eletronictransfer"
                    ];

                messages.forEach(function(item) {
                    if($(item)){
                        $(item).innerHTML = '';
                    }            
                });

                //

                console.log('Mozg.Pagseguro.eventFieldsBoleto.validateField');

                var items = $(['mozg_pagseguro_api_boleto_social_security_number']);

                console.log(items);

                // Check the valid input
                if (!items.map(Validation.validate).all()) {
                    return;
                }

                Mozg.Pagseguro.isValidFormField();

                //

                var objectForm = new VarienForm('co-payment-form', true);
                var elementForm = objectForm.form;
                var formId = elementForm.id;
                var validator = new Validation(formId);
                var failedElements = Form.getElements(elementForm).findAll(function(elm){
                    //console.log(arguments);
                    return $(elm).hasClassName('validation-failed')
                });

                /*console.log(objectForm);
                console.log(elementForm);
                console.log(formId);
                console.log(validator);*/
                console.log(failedElements);

                if (validator.validate()){
                    console.log('Validate true');
                    Mozg.Pagseguro.isValidForm();
                }else{
                    console.log('Validate false');
                }

            },

            eventFieldsTEF: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.eventFieldsTEF');
                console.log(arguments);

                /*console.log(arguments[0][0].target);
                console.log(arguments[0][0].type);
                console.log(arguments[0][0].target.id);*/

                //

                var messages = [
                    "mozg_pagseguro_message_cc", 
                    "mozg_pagseguro_message_boleto", 
                    "mozg_pagseguro_message_eletronictransfer"
                    ];

                messages.forEach(function(item) {
                    if($(item)){
                        $(item).innerHTML = '';
                    }            
                });

                //

                console.log('Mozg.Pagseguro.eventFieldsTEF.validateField');

                var items = $(['mozg_pagseguro_api_eletronictransfer_social_security_number']);

                console.log(items);

                // Check the valid input
                if (!items.map(Validation.validate).all()) {
                    return;
                }

                Mozg.Pagseguro.isValidFormField();

                //

                var objectForm = new VarienForm('co-payment-form', true);
                var elementForm = objectForm.form;
                var formId = elementForm.id;
                var validator = new Validation(formId);
                var failedElements = Form.getElements(elementForm).findAll(function(elm){
                    //console.log(arguments);
                    return $(elm).hasClassName('validation-failed')
                });

                /*console.log(objectForm);
                console.log(elementForm);
                console.log(formId);
                console.log(validator);*/
                console.log(failedElements);

                if (validator.validate()){
                    console.log('Validate true');
                    Mozg.Pagseguro.isValidForm();
                }else{
                    console.log('Validate false');
                }

            },

            observerFieldsCc: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.observerFieldsCc');

                try {

                    var arr = [
                        "mozg_pagseguro_api_cc_cc_number", 
                        "mozg_pagseguro_api_cc_expiration", 
                        "mozg_pagseguro_api_cc_expiration_yr", 
                        "mozg_pagseguro_api_cc_cc_cid"
                        ];
                     
                    var arr = jQuery.map( arr, function( n, i ) {
                        //console.log(arguments);
                        elem = document.getElementById(n);
                        elem.onblur = doEvent;
                    });


                    function doEvent()
                    {
                      Mozg.Pagseguro.eventFieldsCc(arguments);
                    }

                }catch(e){
                    console.error('Não foi possível adicionar observação aos cartões. ' + e.message);
                }

            },

            observerFieldsBoleto: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.observerFieldsBoleto');

                try {

                    var arr = [
                        "mozg_pagseguro_api_boleto_social_security_number", 
                        "mozg_pagseguro_api_boleto_boleto_type", 
                        "mozg_pagseguro_api_boleto_firstname", 
                        "mozg_pagseguro_api_boleto_lastname"
                        ];
                     
                    var arr = jQuery.map( arr, function( n, i ) {
                        //console.log(arguments);
                        elem = document.getElementById(n);
                        elem.onblur = doEvent;
                    });


                    function doEvent()
                    {
                      Mozg.Pagseguro.eventFieldsBoleto(arguments);
                    }

                }catch(e){
                    console.error('Não foi possível adicionar observação aos cartões. ' + e.message);
                }

            },

            observerFieldsTEF: function(){

                debugData.push(arguments.callee.name);

                console.log('Mozg.Pagseguro.observerFieldsTEF');

                try {

                    var arr = [
                        "mozg_pagseguro_api_eletronictransfer_social_security_number", 
                        "mozg_pagseguro_api_eletronictransfer_eletronictransfer_type", 
                        "mozg_pagseguro_api_eletronictransfer_firstname", 
                        "mozg_pagseguro_api_eletronictransfer_lastname"
                        ];
                     
                    var arr = jQuery.map( arr, function( n, i ) {
                        //console.log(arguments);
                        elem = document.getElementById(n);
                        elem.onblur = doEvent;
                    });


                    function doEvent()
                    {
                      Mozg.Pagseguro.eventFieldsTEF(arguments);
                    }

                }catch(e){
                    console.error('Não foi possível adicionar observação aos cartões. ' + e.message);
                }

            },

            //

        };

        //

        window.addEventListener("load", function(){ 

            setTimeout(function(){ 

                console.log('# - # - # - # - ');
                console.log('Mozg.Pagseguro: ' + Mozg.Pagseguro._version);
                Mozg.Pagseguro.initialize(<?php echo $json; ?>);

            }, 1000);


        });

        //

        </script>

    <?php endif; ?>

<?php endif; ?>

<!-- / PagSeguro_Transparente -->

<?php
/**/
?>